
import jsPDF from 'jspdf';

export interface ProtocolPDFData {
  title: string;
  description?: string;
  content: string;
  category: string;
  version: number;
  createdAt: string;
  updatedAt: string;
}

export const addLogoToPDF = async (pdf: jsPDF, pageWidth: number, margin: number): Promise<number> => {
  try {
    const logo = new Image();
    logo.crossOrigin = 'anonymous';
    
    await new Promise((resolve, reject) => {
      logo.onload = resolve;
      logo.onerror = reject;
      logo.src = '/lovable-uploads/305ae0c2-f9ba-42cc-817b-eda518f05406.png';
    });

    const logoAspectRatio = logo.width / logo.height;
    const maxLogoWidth = 40;
    const maxLogoHeight = 20;
    
    let logoWidth = maxLogoWidth;
    let logoHeight = logoWidth / logoAspectRatio;
    
    if (logoHeight > maxLogoHeight) {
      logoHeight = maxLogoHeight;
      logoWidth = logoHeight * logoAspectRatio;
    }

    pdf.addImage(logo, 'PNG', pageWidth - margin - logoWidth, margin, logoWidth, logoHeight);
    return logoHeight + 10;
  } catch (error) {
    console.warn('Could not load logo for PDF export:', error);
    return 10;
  }
};

export const addMetadataSection = (
  pdf: jsPDF, 
  protocol: ProtocolPDFData, 
  margin: number, 
  contentWidth: number,
  startY: number
): number => {
  let currentY = startY;
  
  pdf.setFontSize(10);
  pdf.setFont('helvetica', 'normal');
  pdf.setTextColor(100, 100, 100);
  
  const metadata = [
    `Category: ${protocol.category.charAt(0).toUpperCase() + protocol.category.slice(1)}`,
    `Version: v${protocol.version}`,
    `Created: ${new Date(protocol.createdAt).toLocaleDateString()}`,
    `Updated: ${new Date(protocol.updatedAt).toLocaleDateString()}`
  ];
  
  metadata.forEach(line => {
    pdf.text(line, margin, currentY);
    currentY += 5;
  });
  
  return currentY + 10;
};

export const addFooter = (pdf: jsPDF, pageWidth: number, pageHeight: number, margin: number): void => {
  const totalPages = pdf.internal.pages.length - 1;
  for (let i = 1; i <= totalPages; i++) {
    pdf.setPage(i);
    pdf.setFontSize(8);
    pdf.setTextColor(150, 150, 150);
    pdf.text('Generated by Kapelczak Lab Management System', margin, pageHeight - 10);
    pdf.text(`Page ${i} of ${totalPages}`, pageWidth - margin - 20, pageHeight - 10);
  }
};
